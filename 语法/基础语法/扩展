

什么是二进制?
二进制是计算技术中广泛采用的一种数制。二进制数据据是用0和1两个数码来表示的数。它的基数为2，进位规则是“逢二进一”，借位规则是“借一当二”，由18世纪德国数理哲学大师莱布尼兹发现。
当前的计算机系统使用的基本上是二进制系统，数据在计算机中主要是以补码的形式存储的。计算机中的二进制则是一个非常微小的开关，用“开”来表示1，“关”来表示0。


二进制数的四则运算
二进制数与十进制数一样，同样可以进行加、减、乘、除四则运算。其算法规则如下：
加运算：0+0=0，0+1=1，1+0=1，1+1=10，（逢2进1）；
减运算：1-1=0，1-0=1，0-0=0，0-1=1，（向高位借1当2）；
乘运算：0×0=0，0×1=0，1×0=0，1×1=1，（只有同时为“1”时结果才为“1”）；
除运算：二进制数只有两个数（0，1），因此它的商是1或0。
加法0+0=0，0+1=1+0=1，1+1=10
减法0－0=0，1－0=1，1－1=0，0－1=-1，10100-1010=1010
乘法0×0=0，0×1=1×0=0，1×1=1
除法0÷1=0，1÷1=1
只有0和1两个数码，基数为二。

进制间的转化
常见的进制有二进制、八进制、十进制、十六进制。

十进制转二进制：
　　常见的方法有短除法，例如34（10）——>？（2）

　　34 / 2 =17 余0

　　17 / 2 = 8 余1

　　8 / 2 =4 余0

　　4 / 2 =2 余0

　　2 / 2 =1 余0

　　1 / 2 = 0 余1

　　结果就是余数从下往上写 即100010，其余进制转二进制可以先转十进制，再转二进制

二进制转十进制：
把每个数位单独转换后把所有的转换结果求和
例：01001110 = 2^6 + 2^3 + 2^2 + 2^1 = 64 + 8 + 4 + 2 = 78

二进制转十进制
　　方法：按权运算。 例如10101（2）——>?（10）
　　从左至右：1*2^0 + 0*2^1 + 1*2^2 + 0*2^3 + 1*2^4 = 21



************************************************************************************************************************
什么是序列？
所谓序列，指的是一块可存放多个值的连续内存空间，这些值按一定顺序排列，可通过每个值所在位置的编号（称为索引）访问它们。
在 Python 中，序列类型包括字符串、列表、元组、集合和字典，这些序列支持以下几种通用的操作，但比较特殊的是，集合和字典不支持索引、切片、相加和相乘操作。
字符串也是一种常见的序列，它也可以直接通过索引访问字符串内的字符。
************************************************************************************************************************

什么是字符编码
