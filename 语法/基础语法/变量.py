#!/usr/bin/env python
# -*- coding: UTF-8 -*-
'''
@Project ：test 
@File    ：变量.py
@Author  ：Administrator
@Date    ：2020/10/27 13:46 
'''

'''
变量的概念
变量名只有在第一次出现的时候，才是定义变量。当再次出现时，不是定义变量，而是直接使用之前定义的变量。

任何编程语言都需要处理数据，比如数字、字符串、字符等，我们可以直接使用数据，也可以将数据保存到变量中，方便以后使用。

变量（Variable）可以看成一个小箱子，专门用来“盛装”程序中的数据。每个变量都拥有独一无二的名字，通过变量的名字就能找到变量中的数据。

从底层看，程序中的数据最终都要放到内存（内存条）中，变量其实就是这块内存的名字。

和变量相对应的是常量（Constant），它们都是用来“盛装”数据的小箱子，不同的是：变量保存的数据可以被多次修改，而常量一旦保存某个数据之后就不能修改了。

Python 变量的赋值
在编程语言中，将数据放入变量的过程叫做赋值（Assignment）。

Python 使用等号=作为赋值运算符，具体格式为：
name = value

name 表示变量名；value 表示值，也就是要存储的数据。

注意，变量是标识符的一种，它的名字不能随便起，要遵守 Python 标识符命名规范，还要避免和 Python 内置函数以及 Python 保留字重名。

变量命名
1）命名的规范性
（建议）变量名需要由多个字母（或单词）组成，每个单词全部使用小写字母，字母（或单词）之间使用 下划线_连接。例如：first_name、second_name、book_name等等。
（不建议）“小驼峰命名法”：变量名需要由多个字母（或单词）组成，第一个字母（或单词）以小写字母开始，后续字母（或单词）的首字母大写。例如：firstName、secondName、bookName等等。
（不建议）“大驼峰命名法”：每一个字母（或单词）的首字母都采用大写字母。例如：FirstName、SecondName、BookName等等。


下面的语句将整数 10 赋值给变量 n：
n = 10
从此以后，n 就代表整数 10，使用 n 也就是使用 10


变量的值不是一成不变的，它可以随时被修改，只要重新赋值即可；另外你也不用关心数据的类型，可以将不同类型的数据赋值给同一个变量。
注意，变量的值一旦被修改，之前的值就被覆盖了，不复存在了，再也找不回了。换句话说，变量只能容纳一个值。
'''



'''
Python 变量类型
变量存储在内存中的值，这就意味着在创建变量时会在内存中开辟一个空间。
基于变量的数据类型，解释器会分配指定内存，并决定什么数据可以被存储在内存中。
因此，变量可以指定不同的数据类型，这些变量可以存储整数，小数或字符。

变量赋值
Python 中的变量赋值不需要类型声明。
每个变量在内存中创建，都包括变量的标识，名称和数据这些信息。
每个变量在使用前都必须赋值，变量赋值以后该变量才会被创建。
等号 = 用来给变量赋值。
等号 = 运算符左边是一个变量名，等号 = 运算符右边是存储在变量中的值。例如：
'''
#***********************************************************************************************************************

# 定义一个变量
# name = 'Jack'
# age = 18

# 打印变量
# print(name)
# print(age)

# 格式化输出
# print('你的名字是：{}，你的年龄是：{}' .format(name,age))

# 定义多个变量

# name,age = 'Jack',19
# print('你的名字是：{}，你的年龄是：{}' .format(name,age))


#***********************************************************************************************************************


# 定义变量，定义变量的时候，不需要指定变量的类型
# age = 18   # 赋值整型变量
# pi = 3.14  # 浮点型
# name = 'Tom' #字符串

# 内置函数type()  ,可以查看变量的类型
# print(type(age))
# print(type(pi))
# print(type(name))

'''
获取变量在内存中的 id 标识
获取变量在内存中的唯一标识，用 Python 的内置函数 id()。
id() 函数返回的是对象的唯一标识，是一个整数。
'''
age = 18

print(id(age)) #打印出变量在内存中的唯一标识


#***********************************************************************************************************************

#温故而知新

'''
python 变量的解析
python 的变量是可变化数据对象的程序标识符，
python 中的变量赋值是变量名指向数据对象的，即修改变量名是不会影响其数据对象的
python中变量的 “变” 是指变量所指向的数据对象的改变
python中变量的指向，是指向数据对象的 id
python变量是不需要定义类型

'''


#***********************************************************************************************************************

# 常量
'''
所谓的常量就是不能改变的量，比如常用的数学常数 PI 就是一个常量，在python中，通常用全部大写的标识符来表示常量，如：PI=3.1415926
但事实上PI仍然是一个变量，python没有任何机制保证PI不会被修改，所以，用全部大写的标识符表示常量只是一个习惯上的用法，
实际上，PI的值仍然可以被修改。

'''